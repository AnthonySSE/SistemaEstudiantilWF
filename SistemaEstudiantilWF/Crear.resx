<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>